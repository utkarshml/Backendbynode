import express from 'express';
import path from 'path';
import bodyParser from 'body-parser';
import mongoose, { now }  from 'mongoose';
import cookieParser from 'cookie-parser';
mongoose.connect("mongodb://127.0.0.1:27017",{
    dbName: "user",
}).then(e=>{
    console.log("connected to db")
}).catch(e=>{
    console.log("error",e)
}
)
const userSchema = new mongoose.Schema({
    first:String,
    last:String
})
const User = mongoose.model("User",userSchema);
const app = express();
app.use(cookieParser())
app.use(bodyParser.urlencoded({ extended: false }))
app.use(express.urlencoded({extended: true}));
app.set('view engine', 'ejs');
app.use(express.static(path.join(path.resolve(), 'public')));



app.get('/', (req, res) => {
    res.render('index', {title: 'Form'});
    }   
);
const isAuth = (req , res , next)  =>{
    const {value} = req.cookies
    console.log(value)
    if(value){
        next()
    }
    else {
        res.render("login")
    }
}
app.post("/sent", (req, res) => {
    const { first , last} = req.body
    User.create({
        first,last
    }).then(e=>{
        res.send("sent hogya")
    })
    }
);
app.get("/login", (req , res)=>{
    res.render("login")
})
   app.post("/login",isAuth,(req , res) =>{
    res.cookie("value" , null,{
        expires:new Date(now())
    })
    res.render("login")
   })
app.post("/logout", (req,res)=>{
    res.cookie("value","raja",);
    res.render("logout")
})


app.get('/user', (req, res) => {
    res.json({User});
    }
);



app.listen(3000, () => {
    console.log('Example app listening on port 3000!');
    }
);